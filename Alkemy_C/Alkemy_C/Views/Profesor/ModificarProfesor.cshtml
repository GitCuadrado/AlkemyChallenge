@model Alkemy_C.Models.EF_Models.Teacher

@{
    ViewBag.Title = "ModificarProfesor";
}

<div class="feedAgregarUsuario">
    <form class="modificarProfesor__container" action="@Url.Content("~/Profesor/ModificarProfesor")" method="post">
        @Html.HiddenFor(model => model.Id)
        <div>
            <h1>Modificar Profesor</h1>
        </div>
        <div class="inputGroup">
            @Html.EditorFor(model => model.Ci)
            @Html.ValidationMessageFor(model => model.Ci)
        </div>
        <div class="inputGroup">
            @Html.EditorFor(model => model.name)
            @Html.ValidationMessageFor(model => model.name)
        </div>
        <div class="inputGroup">
            @Html.EditorFor(model => model.last_name)
            @Html.ValidationMessageFor(model => model.last_name)
        </div>
        <div class="inputGroup">
            @Html.EditorFor(model => model.active)
            @Html.ValidationMessageFor(model => model.active)
        </div>
        <div>
            <input class="btnForm" type="submit" value="Modificar" />
        </div>
        <div>
            @Html.ActionLink("Volver", "Profesores", new { area = "" }, new { @class = "btnForm" })
        </div>
        @ViewBag.modificarProfesorStatus
    </form>

</div>
<div class="FeedBackground">

</div>









<h2>ModificarProfesor</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Teacher</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Ci, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ci, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ci, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.last_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.last_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.last_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.active, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.active, "", new { @class = "text-danger" })
            </div>
        </div>
        @ViewBag.modificarProfesorStatus
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}




<div>
    @Html.ActionLink("Back to List", "Profesores")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
